
#ifndef TOKEN_H
#define TOKEN_H

extern char* token_strings[];

extern const int MAX_TOKEN_LENGTH;

typedef enum {
     TOKEN_EOF = 0,
     TOKEN_ERROR,
     TOKEN_ARRAY,
     TOKEN_BOOLEAN,
     TOKEN_CHAR,
     TOKEN_ELSE,
     TOKEN_FALSE,
     TOKEN_FOR,
     TOKEN_FUNCTION,
     TOKEN_IF,
     TOKEN_INTEGER,
     TOKEN_PRINT,
     TOKEN_RETURN,
     TOKEN_STRING,
     TOKEN_TRUE,
     TOKEN_VOID,
     TOKEN_WHILE,
     TOKEN_COLON,
     TOKEN_SEMICOLON,
     TOKEN_COMMA,
     TOKEN_LEFTSQUAREBRACKET,
     TOKEN_RIGHTSQUAREBRACKET,
     TOKEN_LEFTCURLYBRACE,
     TOKEN_RIGHTCURLYBRACE,
     TOKEN_LEFTPAREN,
     TOKEN_RIGHTPAREN,
     TOKEN_EQUALS,
     TOKEN_CARRET,
     TOKEN_PLUS,
     TOKEN_MINUS,
     TOKEN_PLUSPLUS,
     TOKEN_MINUSMINUS,
     TOKEN_MULTIPLY,
     TOKEN_DIVIDE,
     TOKEN_MODULO,
     TOKEN_EQUALSEQUALS,
     TOKEN_GREATERTHANEQUALTO,
     TOKEN_LESSTHANEQUALTO,
     TOKEN_LESSTHAN,
     TOKEN_GREATERTHAN,
     TOKEN_NOTEQUAL,
     TOKEN_PIPEPIPE,
     TOKEN_ANDAND,
     TOKEN_STRINGLITERAL,
     TOKEN_CHARLITERAL,
     TOKEN_IDENTIFIER,
     TOKEN_NUMBER
} token_t;

#endif
